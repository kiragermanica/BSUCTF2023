В распакованном архиве можно найти три интересных для нас файла.
  ecrypt - непосредственно наш бинарь.
  encrypted_flag.bin - флаг в зашифрованном виде.
  .zsh_history - проще говоря, файл с историей вводимых команд.
Последний файл был бы скрыт на линуксе (за винду не шарю), но его наличие можно заметить при распаковке архива, либо просто не забыть проверить с помощью флага на скрытые файлы в ls.
Для начала проверим данный файл внимательно, одна строка особенно привлекает внимание:

echo Li9lbmNyeXB0IGZsYWcudHh0IGVuY3J5cHRlZF9mbGFnLmJpbiB5b3VfbG92ZV9uaWdnZXJzCg== | base64 -d | bash

Данная команда декодирует строку из base64 и затем запускает результат через bash.
Декодированная строка:

./encrypt flag.txt encrypted_flag.bin you_love_niggers

Мы видим, что файл encrypt запускался с определенными аргументами, что они значат можно узнать (хотя понятно интуитивно), выполнив команду strings на encrypt, либо просто при попытке запуска бинаря.

Usage: <flag_file> <output_file> <key>
 
Дальнейший анализ файла можно провести через декомпилятор, однако при решении он мне даже не пригодился.
Содержимое encrypted_flag.bin я засунул на вход в cyberchef.org и попробовал проксорить по полученному ключу you_love_niggers.
Таким образом мы получили половину флага, значит для шифрования используется операция xor и необходимо найти ещё часть ключа.
На этом моменте можно предположить, что шифрование происходит следующим образом: flag ^ (param3 + internal_part_of_key) = encrypted_flag.
Следующим моим действием было снова strings encrypt, где я пытался разглядеть вторую часть ключа. Разглядел: _if_you_use_this_key
Таким образом нам остаётся лишь дополнить ключ на сайберчеф и получить флаг.

Также таск мгновенно решается, если вы поменяете параметры в изначальной команде таким образом:

./encrypt encrypted_flag.bin flag.txt you_love_niggers

Данный вариант можно было попробовать сразу, после того, как вы увидели xor в декомпиляторе, либо догодались об использовании данной операции при ручной попытке. 
